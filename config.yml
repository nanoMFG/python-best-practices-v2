# Small change
title: Python Best Practices
tagline: Learn the best practices for coding in Python
description: >-
  This course covers the best Python coding practices every developer should
  know.
template:
  name: python-best-practices-course
  repo: python-best-practices-v2-template
  description: Description
before:
  - type: updateBranchProtection
    store:
      repository_name: '{{ payload.repository.name }}'
      repository_url: '{{ payload.repository.html_url }}'
      repository_owner: '{{ payload.repository.owner.login }}'
      repository_default_branch: '{{ payload.repository.default_branch }}'
  - type: createIssue
    title: Set up a Python Project
    body: 00_welcome.md
    store:
      first_issue_num: '{{result.data.number}}'
      first_issue_url: '{{result.data.html_url}}'
  - type: respond
    with: 01_add-LICENSE.md
    issue: '{{store.first_issue_num}}'
    data:
      quicklink: '{{store.repository_url}}/new/main?filename=LICENSE'
steps:
  - title: Add a LICENSE file.
    description: Use GitHub to add a LICENSE file from a template.
    event: pull_request.opened
    link: '{{store.first_issue_url}}'
    actions:
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:LICENSE'
        else:
          - type: findInTree
            path: LICENSE
            tree: '%actions.isInTree.data.tree%'
            action_id: fileLocation
          - type: respond
            with: e-wrong-file-location.md
            data:
              haveFile: '%actions.fileLocation.path%'
              needFile: LICENSE
              editLink: >-
                %payload.repository.html_url%/edit/%payload.pull_request.head.ref%/%actions.fileLocation.path%
              fileName: LICENSE
      - type: respond
        with: 02_add-gitignore.md
        data:
          quicklink: >-
            %store.repository_url%/new/%payload.pull_request.head.ref%?filename=.gitignore
  - title: Add a .gitignore file.
    description: Use GitHub to add a .gitignore file from a template.
    event: pull_request.synchronize
    link: '{{store.first_pull_url}}'
    actions:
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:.gitignore'
        else:
          - type: findInTree
            path: .gitignore
            tree: '%actions.isInTree.data.tree%'
            action_id: fileLocation
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{store.first_pull_num}}'
            data:
              haveFile: '%actions.fileLocation.path%'
              needFile: .gitignore
              editLink: >-
                %payload.repository.html_url%/edit/%payload.pull_request.head.ref%/%actions.fileLocation.path%
              fileName: .gitignore
      - type: createFile
        filename: t-README-template.md
        branch: '%payload.pull_request.head.ref%'
        new_name: README.md
        message: Created a README.md from a template.
      - type: createReview
        body: 03_added-README-merge.md
        event: APPROVE
        data:
          files_changed_tab: '%store.repository_url%/pull/2/files'
          readme_link: >-
            %store.repository_url%/blob/%payload.pull_request.head.ref%/README.md
  - title: Merge the First Pull Request
    description: Merge the preliminary files to start the project
    event: pull_request.closed
    link: '{{store.first_pull_url}}'
    actions:
      - type: respond
        with: d-check-a-value.md
        data:
          value: Creating content for the next step...
      - type: createIssue
        title: Add your Own Python Package
        body: 04_add-python-code.md
        store:
          second_issue_num: '{{result.data.number}}'
          second_issue_url: '{{result.data.html_url}}'
      - type: respond
        with: go-to-next-issue.md
        data:
          quicklink: '{{store.second_issue_url}}'
      - type: closeIssue
        issue: '%store.first_issue_num%'
  - title: Create a Setup.py
    description: NA
    event: push
    link: '{{ repoUrl }}/issues/1'
    actions:
      - type: getFileContents
        action_id: setup1Contents
        filename: setup.py
      - type: gate
        left: >-
          /from\ssetuptools\simport\ssetup,\sfind_packages\nimport\spathlib\n\nhere\s=\spathlib.Path/g
        operator: test
        right: '%actions.setup1Contents%'
        else:
          - type: respond
            with: 01_bad-setup.md
            issue: 1
      - type: createIssue
        title: Follow style guidelines
        body: 02_follow-style-guidelines.md
        action_id: second_issue
      - type: respond
        with: 01_successful-push.md
        issue: 1
        data:
          url: '%actions.second_issue.data.html_url%'
  - title: Format existing code in formatting.py
    description: NA
    event: push
    link: '{{ repoUrl }}/issues/2'
    actions:
      - type: getFileContents
        action_id: formattingContents
        filename: formatting.py
      - type: gate
        left: /x\s=\s5/g
        operator: test
        right: '%actions.formattingContents%'
        else:
          - type: respond
            with: 02_bad-formatter.md
            issue: 2
      - type: respond
        with: 02_add-google-style-comment.md
        issue: 2
  - title: Add google-style comment blocks in formatting.py
    description: NA
    event: push
    link: '{{ repoUrl }}/issues/2'
    actions:
      - type: getFileContents
        action_id: formatting2Contents
        filename: formatting.py
      - type: gate
        left: /x\s=\s5/g
        operator: test
        right: '%actions.formatting2Contents%'
        else:
          - type: respond
            with: 02_bad-google-comment.md
            issue: 2
      - type: createIssue
        title: Pip install and requirements.txt
        body: 03_pip-and-venv.md
        action_id: third_issue
      - type: respond
        with: 02_successful-push.md
        issue: 2
        data:
          url: '%actions.third_issue.data.html_url%'
  - title: >-
      Create dependencies in setup.py and use pip tools to create a
      requirements.txt
    description: NA
    event: push
    link: '{{ repoUrl }}/issues/3'
    actions:
      - type: getFileContents
        action_id: setup2Contents
        filename: setup.py
      - type: gate
        left: /a\s=\s5/g
        operator: test
        right: '%actions.setup2Contents%'
        else:
          - type: respond
            with: 03_bad-setup.md
            issue: 3
      - type: getFileContents
        action_id: requirementsContents
        filename: requirements.txt
      - type: gate
        left: /numpy/g
        operator: test
        right: '%actions.requirementsContents%'
        else:
          - type: respond
            with: 03_bad-requirements.md
            issue: 3
      - type: respond
        with: 03_activate-venv.md
        issue: 3
  - title: >-
      Install/create/activate virtual environment and Pip install packages using
      requirements.txt
    description: NA
    event: issue_comment.created
    link: '{{ repoUrl }}/issues/3'
    actions:
      - type: gate
        left: /Output/g
        operator: test
        right: '%payload.comment.body%'
        else:
          - type: respond
            with: 03_bad-comment.md
            issue: 3
      - type: createIssue
        title: Pytest
        body: 04_pytest.md
        action_id: fourth_issue
      - type: respond
        with: 03_successful-push.md
        issue: 3
        data:
          url: '%actions.fourth_issue.data.html_url%'
  - title: Run an existing test
    description: NA
    event: issue_comment.created
    link: '{{ repoUrl }}/issues/4'
    actions:
      - type: gate
        left: /ERROR/g
        operator: test
        right: '%payload.comment.body%'
        else:
          - type: respond
            with: 04_bad-comment.md
            issue: 3
      - type: respond
        with: 04_successful-push.md
        issue: 4
  - title: Fix a failing test
    description: >-
      Commit the fix to the test in a new branch, create a pull request to merge
      to fix pytest branch
    event:
      - pull_request
      - check_suite.completed
    link: '{{ repoUrl }}/issues/4'
    actions:
      - type: gate
        left: '%payload.pull_request.title%'
        operator: ===
        right: Fix Pytest
        else:
          - type: respond
            with: 04_bad-pull-request.md
            issue: 1
      - type: respond
        with: 04_successful-pr.md
        issue: 1
      - type: gate
        left: '%payload.check_suite.conclusion%'
        operator: ===
        right: success
        else:
          - type: respond
            with: 04_bad-check-run.md
            issue: 1
      - type: respond
        with: 04_successful-push.md
        issue: 1
