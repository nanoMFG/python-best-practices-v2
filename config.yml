title: Python Best Practices
tagline: Learn the best practices for coding in Python
description: >-
  This course covers the best Python coding practices every developer should
  know.
template:
  name: python-best-practices-course
  repo: python-best-practices-v2-template
  description: Description
#################################################################
#
#
#################################################################
before:
  - type: updateBranchProtection
    store:
      repository_name: '{{ payload.repository.name }}'
      repository_url: '{{ payload.repository.html_url }}'
      repository_owner: '{{ payload.repository.owner.login }}'
      repository_default_branch: '{{ payload.repository.default_branch }}'
  #   Create the first issue
  - type: createIssue
    title: Set up a Python Project
    body: 00_welcome.md
    store:
      first_issue_num: '{{result.data.number}}'
      first_issue_url: '{{result.data.html_url}}'
  # Respond in first issue with first activity
  - type: respond 
    with: 01_add-LICENSE.md
    issue: '{{store.first_issue_num}}' 
    data:
      quicklink: '{{store.repository_url}}/new/main?filename=LICENSE'
# end before

steps:
  #############################################################
  # Step 1
  # - User commits to head branch of first_pull
  # - App checks if LICENSE exists at top-level
  # - App responds, asks user to commit LICENSE
  #############################################################
  - title: Add a LICENSE file.
    description: Use GitHub to add a LICENSE file from a template.
    event: 
      - pull_request.opened
      - pull_request.synchronize
    link: '{{store.first_issue_url}}'
    actions:
    ###########################################################
    # Validate the filepath for the expected file
    ###########################################################
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      # check for a file in a tree
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:LICENSE'
        else:
          # help user with proper file name or location
          - type: respond
            with: e-wrong-file-location.md
            data:
              needFile: LICENSE
              editLink: >-
                {{store.repository_url}}/new/{{payload.pull_request.head.ref}}?filename=LICENSE
              fileName: LICENSE
        # End filepath verification
        # Create README.md
        # Moved to end of step to keep it from interfering with other actions
      - type: createFile
        filename: t-README-template.md
        branch: '%payload.pull_request.head.ref%'
        new_name: README.md
        message: Created a README.md from a template.
        # doing this here because its the first step
        store:
          first_pull_url: '{{payload.pull_request.html_url}}'
          first_pull_num: '{{payload.pull_request.number}}'
          first_pull_headref: '{{payload.pull_request.head.ref}}'
      - type: respond
        with: 02_add-gitignore.md
        data:
          quicklink: >-
            %store.repository_url%/new/%payload.pull_request.head.ref%?filename=.gitignore
  #############################################################
  # Step 2: Add a Python .gitignore file.
  # - User commits to head branch
  # - App checks if .gitignore exists at top-level
  # - App responds, asks user to merge PR
  # ToDo
  # - Check that it is the right file for Python?
  #############################################################
  - title: Add a .gitignore file.
    description: Use GitHub to add a .gitignore file from a template.
    event: pull_request.synchronize
    link: '{{ store.first_pull_url }}'
    actions:
    ###########################################################
    # Validate the filepath for the expected file
    ###########################################################
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      # check for a file in a tree
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:.gitignore'
        else:
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{store.first_pull_num}}'
            data:
              needFile: .gitignore
              editLink: >-
                {{store.repository_url}}/new/{{payload.pull_request.head.ref}}?filename=.gitignore
              fileName: .gitignore
        # End filepath verification

      # Approve PR
      - type: createReview
        body: 03_added-README-merge.md
        event: APPROVE
        data:
          files_changed_tab: '%store.repository_url%/pull/2/files'
          readme_link: >-
            %store.repository_url%/blob/%payload.pull_request.head.ref%/README.md

  #############################################################
  # Step 3: Merge PR
  # - User merges first PR
  # - App closes first issue
  # - App creates new issue
  # - App responds in closed PR with link to new issue for next
  #   step
  #############################################################
  - title: Merge the First Pull Request
    description: Merge the preliminary files to start the project
    event: pull_request.closed
    link: '{{ store.second_pull_url }}'
    actions:
      - type: respond
        with: d-check-a-value.md
        data:
          value: Creating content for the next step...
      # Create next issue
      - type: createIssue
        title: Add your Own Python Package
        body: 04_add-python-code.md
        store:
          second_issue_num: '{{result.data.number}}'
          second_issue_url: '{{result.data.html_url}}'
      # respond with link
      - type: respond
        with: go-to-next-issue.md
        data:
          quicklink: '{{store.second_issue_url}}'
      # Close first issue
      - type: closeIssue
        issue: '%store.first_issue_num%'
      # Respond with next activity
      - type: respond
        issue: "%store.second_issue_num%"
        with: 04_add-init-files.md
        data:
          quicklink1: '%store.repository_url%/new/main?filename=src\%2Fdigit_reader\%2F__init__.py'
          quicklink2: '%store.repository_url%/new/main?filename=src\%2Fdigit_reader\%2Fmodel\%2F__init__.py'

# The next step should look for pull_request.opened

  #############################################################
  # Step 4: Add __init__.py for planned packages/modules
  #
  #
  #
  #############################################################
  - title: Add __init__.py files to package.
    description: Create a working package directory by adding the magic python files
    event: 
      - pull_request.opened
      - pull_request.synchronize
    link: '{{ store.second_pull_url }}'
    actions:
    ###########################################################
    # Validate the filepath for the expected file
    ###########################################################
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      # check for a file (src/digit_reader/__init__.py) in a tree
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:src/digit_reader/__init__.py'
        else:
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{payload.pull_request.number}}'
            data:
              needFile: src/digit_reader/__init__.py
              editLink: >-
                {{store.repository_url}}/new/{{payload.pull_request.head.ref}}?filename=src/digit_reader/__init__.py
              fileName: src/digit_reader/__init__.py
        # End filepath verification

    # check for a file (src/digit_reader/model/__init__.py) in a tree
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:src/digit_reader/model/__init__.py'
        else:
        # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{payload.pull_request.number}}'
            data:
              needFile: src/digit_reader/model/__init__.py
              editLink: >-
                    {{store.repository_url}}/new/{{payload.pull_request.head.ref}}?filename=src/digit_reader/model/__init__.py
              fileName: src/digit_reader/model/__init__.py
      # End filepath verification

      # Add new tests for steps 4-6
      - type: createFile
        filename: t-test_module.py
        branch: '%payload.pull_request.head.ref%'
        new_name: src/digit_reader/test/test_module.py
        message: Added new tests for steps 4-6.
        store:
          second_pull_url: '{{payload.pull_request.html_url}}'
          second_pull_num: '{{payload.pull_request.number}}'
      - type: respond
        with: 05_add-python-module.md
        data:
          quicklink1: '%store.repository_url%/new/%payload.pull_request.head.ref%?filename=src\%2Fdigit_reader\%2Fmodel\%2Fmodel.py'


  #############################################################
  # Step 5: Add skeleton module code
  #
  #
  #
  #############################################################
  - title: Add skeleton for python module code.
    description: Add the module file with basic outline of class and methods that will be needed
    event: pull_request.synchronize
    link: '{{ store.second_pull_url }}'
    actions:
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      # check for a file in a tree
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:src/digit_reader/model/model.py'
        else:
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{store.second_pull_num}}'
            data:
              needFile: src/digit_reader/model/model.py
              editLink: >-
                {{store.repository_url}}/new/{{payload.pull_request.head.ref}}?filename=src/digit_reader/model/model.py
              fileName: src/digit_reader/model/model.py
        # End filepath verification
      # Probably should validate other file as well...
      - type: respond
        with: 06_add-docstrings.md


  #############################################################
  # Step 6: Add docstrings
  #############################################################
  - title: Add skeleton for python module code.
    description: Add the module file with basic outline of class and methods that will be needed
    event: 
      - pull_request.synchronize
      - check_suite.completed
    link: '{{ store.second_pull_url }}'
    actions:
      - type: gate
        left: "%payload.check_suite.app.slug%"
        operator: ===
        right: github-actions
      - type: gate
        left: "%payload.check_suite.conclusion%"
        operator: ===
        right: success
        else:
          - type: respond
            with: e-failed-checks.md
            data:
              value: Did you create the files we asked you to create? Did you write docstrings in the right format? 
      - type: createReview
        event: APPROVE    
        body: 03_added-README-merge.md
        pullRequest: Create __init__.py
      - type: respond
        with: 06-continue-to-merge.md
        data:
          quicklink1: '%store.repository_url%/new/%payload.pull_request.head.ref%'

  #############################################################
  # Step 7: Merge PR
  # - User merges second PR
  # - App closes second issue
  # - App creates new issue
  # - App responds in closed PR with link to new issue for next
  #   step
  #############################################################
  - title: Merge the Second Pull Request
    description: Merge the preliminary files to start the project
    event: pull_request.closed
    link: '{{store.second_pull_url}}'
    actions:
      - type: respond
        with: d-check-a-value.md
        data:
          value: Creating content for the next step...
      # Create next issue
      - type: createIssue
        title: Add Module Code tests and setup.py
        body: 08_introduce-setup-and-pip.md
        store:
          third_issue_num: '{{result.data.number}}'
          third_issue_url: '{{result.data.html_url}}'
      # Respond with next activity
      - type: respond
        with: 08_setuptools-intro.md
        issue: '{{store.third_issue_num}}'
        data:
          quicklink1: '{{store.repository_url}}/new/main?filename=setup.py'
      # respond with link
      - type: respond
        with: go-to-next-issue.md
        data:
          quicklink: '{{store.third_issue_url}}'
      # Close second issue
      - type: closeIssue
        issue: '%store.second_issue_num%'


  #############################################################
  # Step 8: Write a setup script
  #############################################################
  - title: Write a setup script. 
    description: write a setup script to build application
    event:
      - pull_request.opened
      - pull_request.synchronize
    link: '{{ store.third_pull_url }}'
    actions:
      # get tree
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%'
      # check for a file in a tree
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:setup.py'
        else:
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{payload.pull_request.number}}'
            data:
              needFile: setup.py
              editLink: >-
                {{store.repository_url}}/new/main?filename=setup.py
              fileName: setup.py
        # End filepath verification
      # Probably should validate other file as well...
      - type: respond
        with: 08_venv-intro.md
        store:
          third_pull_url: '{{payload.pull_request.html_url}}'
          third_pull_num: '{{payload.pull_request.number}}'
          third_pull_branch: '{{payload.pull_request.head.ref}}'
  
  
  #############################################################
  # Step 9: Activate virtual environment
  #############################################################
  - title: Activate virtual environment
    description: Create and activate a virtual environment
    event: issue_comment.created
    link: '{{ store.third_pull_url }}'
    actions:
      - type: respond
        with: 09_pip.md
      # TODO: Add test for whether requirements.txt contains numpy, tensorflow etc
      - type: createFile
        filename: t-test_import.py
        branch: '%store.third_pull_branch%'
        new_name: src/digit_reader/test/test_import.py
        message: Added new import test for steps 10. 
   


  #############################################################
  # Step 10: Install external packages using pip
  #############################################################
  - title: Install external packages using pip
    description: Create a requirements.txt using setup.py and install external packages with pip
    event: pull_request.synchronize
    link: '{{ store.third_pull_url }}'
    actions:
      - type: getTree
        action_id: isInTree
        recursive: true
        sha: '%payload.pull_request.head.sha%' 
      - type: gate
        left: '%actions.isInTree.data.tree%'
        operator: includes
        right: 'path:requirements.txt'
        else:
          # help user with proper file location
          - type: respond
            with: e-wrong-file-location.md
            issue: '{{payload.pull_request.number}}'
            data:
              needFile: requirements.txt
              editLink: >-
                {{store.repository_url}}/new/{{payload.pull_request.head.ref}}?filename=requirements.txt
              fileName: requirements.txt         
      - type: createReview
        body: 03_added-README-merge.md
        event: APPROVE
      # Close third issue
      - type: closeIssue
        issue: '%store.third_issue_num%' 


  #############################################################
  # Step 11: Merge PR
  #############################################################
  - title: Merge the Third Pull Request
    description: Merge the setup and requirements
    event: pull_request.closed
    link: '{{store.third_pull_url}}'
    actions:
      - type: respond
        with: d-check-a-value.md
        data:
          value: Creating content for the next step...   
      - type: createIssue
        title: Testing
        body: 10_test-intro.md
        store:
          fourth_issue_num: '{{result.data.number}}'
          fourth_issue_url: '{{result.data.html_url}}'
      # Respond with next activity
      - type: respond
        with: 10_pytest.md
        issue: '{{store.fourth_issue_num}}'
      # respond with link
      - type: respond
        with: go-to-next-issue.md
        data:
          quicklink: '{{store.fourth_issue_url}}'  
      - type: removeBranchProtection
      - type: createFile
        filename: t-test_failing.py
        new_name: src/digit_reader/test/test_failing.py
        message: Added new failing test for steps 11.  
      - type: updateBranchProtection    


  #############################################################
  # Step 12: Run pytest
  #############################################################
  - title: Run pytest.
    description: how to run pytest
    event: check_suite.completed
    link: '{{ store.fourth_pull_url }}'
    actions:
      - type: gate
        left: "%payload.check_suite.app.slug%"
        operator: ===
        right: github-actions
      - type: gate
        left: "%payload.check_suite.conclusion%"
        operator: ===
        right: success
        else:
          - type: respond
            with: e-failed-checks.md
            data:
              value: Does your test function assert False or True?    
      - type: respond
        with: 11_write-new-tests.md
      - type: createFile
        filename: t-test_mnist.py
        branch: '%payload.pull_request.head.ref%'
        new_name: src/digit_reader/test/test_mnist.py
        message: Added new failing test for step 11.   
    


  #############################################################
  # Step 13: Write new tests
  #############################################################
  - title: Write tests
    description: how to write tests
    event: pull_request.synchronize
    link: '{{ store.fourth_pull_url }}'
    actions:
    - type: getFileContents
      action_id: testContents
      filename: 'src/digit_reader/test/test_mnist.py'
    - type: gate 
      left: '/(\(x_train, y_train\), \(x_test, y_test\) = prepare_data\(\)\n.*model = MNISTModel\(\)\n.*assert model\.classify_image\(x_test\[0]\))/g'     
      operator: test
      right: '%actions.testContents%'
      else:
        - type: respond
          with: e-failed-checks.md
          data:
            value: Compare your answer to the solution
    - type: respond
      with: 12_implement_function.md


  #############################################################
  # Step 14: Implement classifier function
  #############################################################
  - title: Implement classifer function
    description: write implementationf for MNIST classifier
    event: check_suite.completed
    link: '{{ store.fourth_pull_url }}'
    actions:
      - type: gate
        left: "%payload.check_suite.app.slug%"
        operator: ===
        right: github-actions
      - type: gate
        left: "%payload.check_suite.conclusion%"
        operator: ===
        right: success
        else:
          - type: respond
            with: e-failed-checks.md
            data:
              value: Compare your classifier implementation to the solution. 
      - type: respond
        with: 12_final-response.md        
